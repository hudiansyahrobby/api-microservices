openapi: 3.0.0

info:
  title: "Microservices API"
  description: "API for Microservices"
  version: "1.0.0"
servers:
  - url: http://localhost:8082/api/v1
paths: 
  /user-profile:
    post:
      description: "Create new user profile"
      tags:
        - "UserProfile"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        201:
          description: "Created"
        401:
          description: "Access Denied"
        422:
          description: "Validation Error"
        500:
          description: "Server Error"
  /user-profile/me:
    get:
      description: "Get my user profile"
      security:
        - bearerAuth: []
      tags:
        - "UserProfile"
      responses:
        200:
          description: "OK"
        404:
          description: "Not Found"
        500:
          description: "Server Error"
    put:
      description: "update your profile"
      tags:
        - "UserProfile"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf: 
                - $ref: '#/components/schemas/UserProfile'
      responses:
        200:
          description: "OK"
        401:
          description: "Access Denied"
        404:
          description: "User profile not found"
        422:
          description: "Validation Error"
        500:
          description: "Server Error"
    delete:
      description: "Delete Your Profile"
      security:
        - bearerAuth: []
      tags:
        - "UserProfile"
      responses:
        200:
          description: "OK"
        404:
          description: "User profile not found"
        500:
          description: "Server Error"
  /user-profile/{profileId}:
    get:
      description: "Get user profile detail"
      parameters:
        - in: path
          required: true
          name: profileId
          schema:
            type: string
          description: Get user profile by UID
      tags:
        - "UserProfile"
      responses:
        200:
          description: "OK"
        404:
          description: "User profile not found"
        500:
          description: "Server Error"
  /user-profile/search/{keyword}:
    get:
      description: "Search User Profile By Facebook ID, Name, Email, and Phone Number"
      parameters:
        - in: path
          required: true
          name: keyword
          schema:
            type: string
          description: Search User Profile By Facebook ID, Name, Email, and Phone Number
      tags:
        - "UserProfile"
      responses:
        200:
          description: "OK"
        404:
          description: "User profile not found"
        500:
          description: "Server Error"
components:
  schemas:
    UserProfile:
      type: object
      properties:
        address:
          type: string
          example: "Mataram"
        about:
          type: string
          example: "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
        job:
          type: string
          example: "QA Tester"
        birthday:
          type: string
          example: "2019-09-07"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  

    

  